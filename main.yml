# Workflow's name
name: Build Applications

# Workflow's trigger
on:
  push:
    tags:
    - '*'

# Workflow's jobs
jobs:
  # job's id
  publish:
    # job's name
    name: Build and Publish Release
    # the type of machine to run the job on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - artifact_name: ./artifact/tcp2ws_windows-amd64.tar.gz
            asset_name: tcp2ws_windows-amd64.tar.gz
          - artifact_name: ./artifact/tcp2ws_linux-amd64.tar.gz
            asset_name: tcp2ws_linux-amd64.tar.gz
          - artifact_name: ./artifact/tcp2ws_darwin-amd64.tar.gz
            asset_name: tcp2ws_darwin-amd64.tar.gz
          - artifact_name: ./artifact/tcp2ws_freebsd-amd64.tar.gz
            asset_name: tcp2ws_freebsd-amd64.tar.gz
          - artifact_name: ./artifact/tcp2ws_arm.tar.gz
            asset_name: tcp2ws_arm.tar.gz
          - artifact_name: ./artifact/tcp2ws_mipsle.tar.gz
            asset_name: tcp2ws_mipsle.tar.gz
          - artifact_name: ./artifact/tcp2ws_mips.tar.gz
            asset_name: tcp2ws_mips.tar.gz
          - artifact_name: ./artifact/tcp2ws_mipsle-sf.tar.gz
            asset_name: tcp2ws_mipsle-sf.tar.gz
          - artifact_name: ./artifact/tcp2ws_mips-sf.tar.gz
            asset_name: tcp2ws_mips-sf.tar.gz
          - artifact_name: ./md5sum.txt
            asset_name: md5sum.txt

    if: github.event.repository.owner.id == github.event.sender.id

    # create steps
    steps:
      # step1: Check out Git Repository
      - name: Check out Git Repository
        uses: actions/checkout@v2
        with:
          ref: master

      # step2: Prepare Compilation Environment
      - name: Prepare Compilation Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get install -y pkg-config tar golang-1.13

      # step3: Build Apps
      - name: Build Apps
        run: |
          ./build.sh | tee -a md5sum.txt

      # step4: Prepare Artifact
      - name: Prepare Artifact
        run: |
          mkdir -p ./artifact/
          cp -rf ./release/*.tar.gz ./artifact/

      # step5: Deliver Package
      - name: Deliver Package
        uses: actions/upload-artifact@v2
        with:
          name: tcp2ws
          path: ./artifact/

      # step6: Publish Release
      - name: Publish Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
